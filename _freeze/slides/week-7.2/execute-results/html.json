{
  "hash": "5a99e69902cb80084be4ae55806f7b2c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Make a Map Function\"\ndate: today\ndate-format: long\nfooter: \"[DataViz 2102 Website](https://dataviz-gwu.rocks)\"\nlogo: images/dataviz-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    multiplex: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n\n## What is a Function\n\n- A reusable piece of code that takes some inputs, performs some operations and returns an output\n- Elements\n  - Inputs (arguments)\n  - Operations (code block)\n  - Output (return value)\n- Like cooking (to produce a dish, you have a recipe and ingredients)\n- Don't repeat yourself (DRY)\n\n## Map Function\n\n\n::: {.cell lable='map-function0'}\n::: {.cell-output-display}\n![](week-7.2_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n## Map Function\n\n\n::: {.cell lable='map-function1'}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(wbstats)\n\ncreate_map <- function(var_id, title, legend_title, theme, direction){\n\nne_countries(scale = \"medium\", returnclass = \"sf\") |> \n  left_join(\n    wb_data(var_id, mrnev = 1), \n    join_by(iso_a3 == iso3c)\n  ) |> \n  filter(name != \"Antarctica\") |>  \n  ggplot() + \n  geom_sf(aes(fill = eval(parse(text=var_id)))) + \n  labs(\n    title =  title, \n    fill = legend_title, \n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n  ) +\n  scale_fill_viridis_c( \n    option = theme, \n    direction = direction \n    )\n}\n```\n:::\n\n\n## Map Function\n\n\n::: {.cell lable='map-function2'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nlibrary(rnaturalearth)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(wbstats)\n\ncreate_map <- function(var_id, title, legend_title, theme, direction){\n\nne_countries(scale = \"medium\", returnclass = \"sf\") |> \n  left_join(\n    wb_data(var_id, mrnev = 1), \n    join_by(iso_a3 == iso3c)\n  ) |> \n  filter(name != \"Antarctica\") |>  \n  ggplot() + \n  geom_sf(aes(fill = eval(parse(text=var_id)))) + \n  labs(\n    title =  title, \n    fill = legend_title, \n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n  ) +\n  scale_fill_viridis_c( \n    option = theme, \n    direction = direction \n    )\n}\n```\n:::\n\n\n## Map Function\n\nWhere is the first argument?\n\n<br>\n\n\n::: {.cell lable='map-function4'}\n\n```{.r .cell-code  code-line-numbers=\"9-13\"}\nlibrary(rnaturalearth)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(wbstats)\n\ncreate_map <- function(var_id, title, legend_title, theme, direction){\n\nne_countries(scale = \"medium\", returnclass = \"sf\") |> \n  left_join(\n    wb_data(var_id, mrnev = 1), \n    join_by(iso_a3 == iso3c)\n  ) |> \n  filter(name != \"Antarctica\") |>  \n  ggplot() + \n  geom_sf(aes(fill = eval(parse(text=var_id)))) + # remove quotes\n  labs(\n    title =  title, # change title\n    fill = legend_title, # change legend title\n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n  ) +\n  scale_fill_viridis_c( \n    option = theme, #  chg theme\n    direction = direction # change direction of scale\n    )\n}\n```\n:::\n\n\n## Map Function\n\n\n::: {.cell lable='map-function5'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nlibrary(rnaturalearth)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(wbstats)\n\ncreate_map <- function(var_id, title, legend_title, theme, direction){\n\nne_countries(scale = \"medium\", returnclass = \"sf\") |> \n  left_join(\n    wb_data(var_id, mrnev = 1), # change variable id\n    join_by(iso_a3 == iso3c)\n  ) |> \n  filter(name != \"Antarctica\") |>  \n  ggplot() + \n  geom_sf(aes(fill = eval(parse(text=var_id)))) + \n  labs(\n    title =  title, \n    fill = legend_title, \n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n  ) +\n  scale_fill_viridis_c( \n    option = theme, \n    direction = direction \n    )\n}\n```\n:::\n\n\n## Map Function\n\n\n::: {.cell lable='map-function6'}\n\n```{.r .cell-code  code-line-numbers=\"7,11,16,18-19,27-28\"}\nlibrary(rnaturalearth)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(wbstats)\n\ncreate_map <- function(var_id, title, legend_title, theme, direction){\n\nne_countries(scale = \"medium\", returnclass = \"sf\") |> \n  left_join(\n    wb_data(var_id, mrnev = 1), # change variable id\n    join_by(iso_a3 == iso3c)\n  ) |> \n  filter(name != \"Antarctica\") |>  \n  ggplot() + \n  geom_sf(aes(fill = eval(parse(text=var_id)))) + # remove quotes\n  labs(\n    title =  title, # change title\n    fill = legend_title, # change legend title\n    caption = \"Source: World Bank Development Indicators\"\n    ) +\n  theme_map() +\n  theme(\n    plot.title = element_text(face = \"bold\"),\n  ) +\n  scale_fill_viridis_c( \n    option = theme, #  chg theme\n    direction = direction # change direction of scale\n    )\n}\n```\n:::\n\n\n## Map Function\n\n<br>\n\nSave the source code in a folder... \n\n<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"functions/wb-maps.R\", local = knitr::knit_global())\n```\n:::\n\n\n<br> \n\nand call in your document...<br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncreate_map(var_id = \"SL.TLF.CACT.FE.ZS\", \n           title= \"Female Labor Force Participation\", \n           legend_title = \"FLFP %\", \n           theme = \"inferno\", \n           direction = -1)\n```\n:::\n\n\n\n## Your Turn{.smaller}\n\n<br>\n\n- Take the code from module 3.1, paste in an R script and save in a folder\n- Call `source()` and then the function in your Quarto document\n- Change the values for the five parameters \n- Go back to the code and add a new parameter (like subtitle)\n- Try calling the function again\n- Write something about your map and render the Quarto document\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"setup\" data-update-every=\"1\" tabindex=\"0\" style=\"right:0;bottom:0;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Democracy Function{.smaller}\n\n<br>\n\n- Can you make a map function for a democracy indicator?\n- Come up with a plan\n  - What will the name of the function be?\n  - What will the parameters be?\n  - What would the\n- Take democracy code from last class and implement\n- Add more parameters if desired\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"exercise2\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">20</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Other Functions\n\n- What other visualizations could you \"functionize\"?\n- Line charts?\n- Bar charts? \n- Scatter plots? \n- Try one!\n",
    "supporting": [
      "week-7.2_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}