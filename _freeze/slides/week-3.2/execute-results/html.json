{
  "hash": "51a0e91ce550c05efca2767d917aeb70",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Where to Find Data\ndate: today\ndate-format: long\nfooter: \"[IAFF 6501 Website](https://quant4ia.rocks)\"\nlogo: images/dataviz-logo.png\nfrom: markdown+emoji\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    #multiplex: true\n    chalkboard: true\n    mermaid:\n      theme: neutral\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n\n\n# Where to Find Data\n\n## Where Does Data Come From?\n\n<br>\n\nThoughts? :sunglasses: :thought_balloon:\n\n. . .\n\n:::{.incremental}\n- Your boss or a client sends you a file\n- Survey data collected by you or someone else \n- You can download it from a website \n- You can scrape it from a website\n- A curated collection (e.g. `unvotes`)\n- You can access it through an API\n:::\n\n## APIs\n\n<br>\n\n- API stands for \"Application Programming Interface\"\n- Way for two computers to talk to each other\n\n\n\n```{mermaid}\n%%| fig-align: center\n%%| fig-width: 7\n%% Note: fig-width option not working as of Quarto 1.4, try again in 1.5 \n\nflowchart LR\n    Client-->|Request|id1[(API)]\n    id1[(API)]-->|Response|Client\n    id1[(API)]-->Server\n    Server-->id1[(API)]\n```\n\n\n\n- In our case, we will use APIs to download social science data\n\n## APIs in R\n\n::: {.incremental}\n- APIs are accessed through packages in R\n- Sometimes there can be more than one package for an API\n- Much easier than reading in data from messy flat file!\n- We will use two APIs in this course\n  - World Bank data through `wbstats`\n  - Varieties of Democracy (V-Dem) through `vdemdata`\n- But there are many APIs out there (please explore!)\n:::\n\n## This Lesson\n\n::: {.incremental}\n- Access WB and V-Dem APIs with R packages\n- World Bank data through `wbstats`\n  - There is another package called `WDI`\n- Varieties of Democracy (V-Dem) through `vdemdata`\n  - This is the only package for V-Dem\n  - Just downloads all the data\n  - So we have to use `dplyr` functions like `filter()` and `select()`\n:::\n\n# The World Bank API\n\n## Searching for WB Indicators\n\n<br>\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the wbstats package\nlibrary(wbstats)\n\n# store the list of indicators\nflfp_indicators <- wb_search(\"female labor force\") \n\n# view the indicators\nprint(flfp_indicators,n = 26) \n```\n:::\n\n\n\n<br>\n\nSometimes it is easier to search using the [WDI website](https://databank.worldbank.org/source/world-development-indicators#).\n  \n## Try it Yourself\n\n- Start a new Quarto document\n- Start a new code chunk\n- Load the `wbstats` package\n- Use `wb_search()` to find some indicators you are interested in\n- Compare with a manual search on the [WDI website](https://databank.worldbank.org/source/world-development-indicators#) \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer1\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n## The `wbdata()` Function\n\n<br>\n\nStore the list of indicators you want in an object and then use `wb_data()` to download the data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load dplyr \nlibrary(dplyr) \n\n# store the list of indicators in an object\nindicators <- c(\"flfp\" = \"SL.TLF.CACT.FE.ZS\", \"women_rep\" = \"SG.GEN.PARL.ZS\") \n\n# download the data \nwomen_emp <- wb_data(indicators, mrv = 50) # download data for last 50 yrs\n\n# glimpse the data\nglimpse(women_emp)\n```\n:::\n\n\n\n## Some Functions for Wrangling Data {.smaller}\n\n- From `dplyr`\n  - `filter()` to filter observations (rows)\n  - `select()` to select or drop variables (columns)\n  - `mutate()` to create new variables or modify existing ones\n  - `rename()` to rename variables\n  - `case_match()` to recode variables\n- From the `janitor` package\n  - `clean_names()` (used earlier)\n  - `round_to_fraction()` to round to nearest fraction\n\n## Cleaning the WB Data\n\n<br>\n\nUse `select()` to drop iso2c variable and `rename()` to rename date to year:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|6|7\"}\n# Load janitor\nlibrary(janitor) \n\n# Download the data  \nwomen_emp <- women_emp |> \n  select(!iso2c) |> # drop the iso2c code which we won't be using\n  rename(year = date) |> # rename date to year \n  mutate(\n    flfp = round_to_fraction(flfp, denominator = 100), # round to nearest 100th\n    women_rep = round_to_fraction(women_rep, denominator = 100) \n  )\n\n# View the data\nglimpse(women_emp) \n```\n:::\n\n\n\n## Cleaning the WB Data\n\n<br>\n\nUse `mutate()` and `round_to_fraction` to round the `flfp` and `women_rep` variables to the nearest 100th:\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2,8-11\"}\n# Load janitor\nlibrary(janitor) \n\n# Download the data  \nwomen_emp <- women_emp |> \n  select(!iso2c) |> # drop the iso2c code which we won't be using\n  rename(year = date) |> # rename date to year \n  mutate(\n    flfp = round_to_fraction(flfp, denominator = 100), # round to nearest 100th\n    women_rep = round_to_fraction(women_rep, denominator = 100) \n  )\n\n# View the data\nglimpse(women_emp) \n```\n:::\n\n\n\n## Or Do it All in One Go\n\n<br> \n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"|5-9\"}\n# load th4e packages\nlibrary(janitor)\nlibrary(dplyr)\n\n# store the list of indicators in an object\nindicators <- c(\"flfp\" = \"SL.TLF.CACT.FE.ZS\", \"women_rep\" = \"SG.GEN.PARL.ZS\") \n\n# Download the data  \nwomen_emp <- wb_data(indicators, mrv = 50) |> # download data for last 50 yrs\n  select(!iso2c) |> # drop the iso2c code which we won't be using\n  rename(year = date) |> # rename date to year \n  mutate(\n    flfp = round_to_fraction(flfp, denominator = 100), # round to nearest 100th\n    women_rep = round_to_fraction(women_rep, denominator = 100) \n  )\n\n# View the data\nglimpse(women_emp) \n```\n:::\n\n\n\n## Try it Yourself\n\n<br>\n\n- Using the variables you identified in your search, download the data\n- Think about what elements of the code you need to change\n- Hint: the indicators are going to change!\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer2\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n# The V-Dem API\n\n## Downloading V-Dem Data\n\n::: {.incremental}\n- The `vdem` function from `vdemdata` just downloads the data\n- There are no parameters for selecting indicators or date ranges\n- So we have to do more work with `dplyr` functions\n  - `filter()` for years\n  - `select()` for variables\n- We are also going to combine `case_match()` with `mutate()` to replace the `region` codes with names\n:::\n\n## \n\n<br>\n\nThe `vdemdata` package is a wrapper for the V-Dem API. It allows download the V-Dem data directly into R. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(vdemdata) # to download V-Dem data\nlibrary(dplyr)\n\n# Download the data\ndemocracy <- vdem \n\n# View the data\nglimpse(democracy)\n```\n:::\n\n\n\nTry running this code chunk and see what happens!\n\n## `vdemdata` Example {.smaller}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load packages\nlibrary(vdemdata) # to download V-Dem data\nlibrary(dplyr)\n\n# Download the data\ndemocracy <- vdem |> # download the V-Dem dataset\n  filter(year >= 1990)  |> # filter out years less than 1990\n  select(                  # select (and rename) these variables\n    country = country_name,     # the name before the = sign is the new name  \n    vdem_ctry_id = country_id,  # the name after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |>\n  mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n                    # number on the left of the ~ is the V-Dem region code\n                    # we are changing the number to the country name on the right\n                    # of the equals sign\n  )\n\n# View the data\nglimpse(democracy)\n```\n:::\n\n\n\n## \n\nUse `filter()` to select years...\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\n# Download the data\ndemocracy <- vdem |> # download the V-Dem dataset\n  filter(year >= 1990)  |> # filter out years less than 1990\n  select(                  # select (and rename) these variables\n    country = country_name,     # the name before the = sign is the new name  \n    vdem_ctry_id = country_id,  # the name after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |>\n  mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n                    # number on the left of the ~ is the V-Dem region code\n                    # we are changing the number to the country name on the right\n                    # of the equals sign\n  )\n```\n:::\n\n\n\n## \n\nUse `select()` to choose variables...\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"4-11\"}\n# Download the data\ndemocracy <- vdem |> # download the V-Dem dataset\n  filter(year >= 1990)  |> # filter out years less than 1990\n  select(                  # select (and rename) these variables\n    country = country_name,     # the name before the = sign is the new name  \n    vdem_ctry_id = country_id,  # the name after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |>\n  mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n                    # number on the left of the ~ is the V-Dem region code\n                    # we are changing the number to the country name on the right\n                    # of the equals sign\n  )\n```\n:::\n\n\n\n## \n\nUse `mutate` with `case_match()` to Recode Region....\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"12-23\"}\n# Download the data\ndemocracy <- vdem |> # download the V-Dem dataset\n  filter(year >= 1990)  |> # filter out years less than 1990\n  select(                  # select (and rename) these variables\n    country = country_name,     # the name before the = sign is the new name  \n    vdem_ctry_id = country_id,  # the name after the = sign is the old name\n    year, \n    polyarchy = v2x_polyarchy, \n    gdp_pc = e_gdppc, \n    region = e_regionpol_6C\n    ) |>\n  mutate(\n    region = case_match(region, # replace the values in region with country names\n                     1 ~ \"Eastern Europe\", \n                     2 ~ \"Latin America\",  \n                     3 ~ \"Middle East\",   \n                     4 ~ \"Africa\", \n                     5 ~ \"The West\", \n                     6 ~ \"Asia\")\n                    # number on the left of the ~ is the V-Dem region code\n                    # we are changing the number to the country name on the right\n                    # of the equals sign\n  )\n```\n:::\n\n\n\n## Try it Yourself\n\n- Go to the V-Dem [Codebook](https://www.v-dem.net/documents/24/codebook_v13.pdf) \n- Select a democracy indicator from Part 2.1 (high level indicators) and one other indicator\n- Note the indicator code (e.g. \"v2x_polyarchy\" for the polyarchy score)\n- In your Quarto document, create a new code chunk\n- Use the codes for your selected indicators to download the data\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer3\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:5%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n",
    "supporting": [
      "week-3.2_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}