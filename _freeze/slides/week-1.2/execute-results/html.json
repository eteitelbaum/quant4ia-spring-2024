{
  "hash": "ca772be33ae86de8576fca62d37617d1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Getting Started\nsubtitle: RStudio and Basic Quarto\ndate: today\ndate-format: long\nfooter: \"[IAFF 6501 Website](https://quant4ia.rocks)\"\nlogo: images/iaff6501-logo.png\nformat:\n  revealjs:\n    theme: [simple, custom.scss]\n    transition: fade\n    slide-number: true\n    #multiplex: true\n    chalkboard: true\nexecute:\n  echo: false\n  message: false\n  warning: false\n  freeze: auto\n---\n\n\n# Quarto\n\n## Quarto\n\n<br>\n\n::: {.incremental}\n-   [Quarto](https://quarto.org/) is an open-source scientific publishing platform\n-   Allows you to integrate text with code\n-   Kind of like a word processor for data science\n-   Can use it to create reports, books, websites, etc.\n-   Can make HTML, PDF, Word, and other formats\n-   Can use R, Python, Julia, and other languages\n:::\n\n## Project Oriented Workflow\n\n<br>\n\n:::{.incremental}\n-   Always start a document in a project folder\n    -   That way you don't have to do `setwd`\n    -   Also can share easily with other people\n-   Go to File\\>New Project\n-   Create a Quarto project folder\n:::\n\n## Visual Editor\n\n::: {.incremental}\n-   There are two ways to edit Quarto docs\n    -   Source (markdown)\n    -   Visual editor\n-   Visual editor\n    -   WYSIWYM\n    -   Approximates appearance\n-   Try both and see what you like\n:::\n\n## Rendering Documents {.smaller}\n\n::: {.incremental}\n-   Rendering = converting to another format\n    - Default format is HTML\n    - Can also render to PDF, Word, etc. \n-   To render a Quarto document\n    -   Click on the Render button\n        -   Or keyboard shortcut (Cmd/Ctrl + Shift + K)\n-   By default, Quarto will preview the document in your browser\n-   But you can also preview in Viewer pane\n    - Click on the gear icon next to the Render button\n    - Select \"Preview in Viewer Pane\"\n:::\n\n## Illustration\n\n![](images/intro_quarto.gif){fig-align=\"center\"}\n\n## Let's Try Quarto!\n\n-   Create a new Quarto document\n    -   File\\>New File\\>Quarto Document\n-   Save the document in your project folder\n-   Render it\n    -   Click on the Render button\n    -   Or keyboard shortcut (Cmd/Ctr + Shift + K)\n-   Try out the visual editor\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer1\" data-update-every=\"1\" tabindex=\"0\" style=\"top:0%;right:5%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# Quarto Docs\n\n## Document Elements\n\n<br>\n\n-   YAML Header\n-   Markdown content\n-   Code chunks\n\n## YAML Header\n\n<br>\n\n-   Metadata about the document\n    -   Title, author, date, etc.\n-   Output format\n-   Execution options\n\n## YAML Header\n\n```         \n---\ntitle: \"My Documnet\"\nauthor: \"Your Name\"\ndate: today\ndate-format: long\nformat: html\nexecute:\n  echo: false\n  message: false\n---\n```\n - Try changing some of these options in your document\n - Then render it again\n - Look in the Quarto [guide](https://quarto.org/docs/reference/formats/html.html) for other options to try\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer3\" data-update-every=\"1\" tabindex=\"0\" style=\"right:5%;bottom:0%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Markdown\n\n<br>\n\n::: {.incremental}\n-   Markdown is a simple markup language\n-   You can use it to format text\n-   You can also use it to embed images, tables, etc.\n-   And to embed code chunks...\n:::\n\n## Markdown Syntax - Basic Authoring\n\n::: {.incremental}\n-   For basic text you can just start typing\n-   For line breaks use two spaces and return (enter)\n-   Headings (use `#`, `##`, `###`, etc.)\n    -   `#` is the largest heading (level 1)\n    -   `##` is the next largest (level 2)\n    -   `###` is the next largest (level 3)\n    -   Etc.\n:::\n\n## Markdown Syntax - Styling\n\n::: {.incremental}\n-   Emphasis = Italics (use `*`)\n    -   Bold (use `**`)\n-   Lists\n    -   Bullet points (use `-`)\n    -   Numbered lists (use `1.`)\n:::\n\n## Markdown Syntax - Content\n\n::: {.incremental}\n-   Links (use `[text](url)`)\n-   Images (use `![](file path or url)`)\n-   Code chunks\n    -   R code chunks (\\`\\`\\`{r}...\\`\\`\\`)\n    -   Python code chunks (\\`\\`\\`{python}...\\`\\`\\`)\n    -   Etc. \n:::\n\n## Try Some Markdown\n\n<br>\n\n-   Check out the [Markdown Cheatsheet](https://www.markdownguide.org/basic-syntax/)\n-   Try editing the markdown in your document\n-   Try some of the other things you find in the guide\n-   Then render it again\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer4\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">05</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Code Chunks\n\n::: {.incremental}\n-   Incorporate R code (could also be Python, Julia, etc.)\n-   Add a code chunk with the '+' button\n-   Run the code chunk by clicking the play button\n    -   Or use keyboard shortcut (Cmd/Ctrl + Shift + Enter)\n-   Run all chunks up that point by clicking the down arrow\n    -   Or use keyboard shortcut (Cmd/Ctrl + Shift + K)\n-  Run a single line with shortcut (Cmd/Ctrl + Enter) \n:::\n\n## Code Chunk Options\n\n::: {.incremental}\n-   Use `#|` (hash-pipe) to add options \n-   `label` is a unique identifier for the chunk\n-   Options to control what happens when you render\n    -   `echo` controls whether the code is shown\n    -   `eval` controls whether the code is run\n    -   `message` controls whether messages are shown\n    -   `warning` controls whether warnings are shown\n:::\n\n## Code Chunk Options\n\n<br>\n\n-   Code-chunk options override global options set in YAML header\n-   See [documentation](https://quarto.org/docs/reference/cells/cells-knitr.html) for more options\n-   You can also use write chunk options inline with chunk name,\n    -   e.g., `{r, echo = FALSE} ...`\n    \n## Illustration\n\n![](images/code-chunks.gif){fig-align=\"center\"}\n\n## Try it Yourself! \n\n-  Create a code chunk\n-  Copy this code chunk into your document\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(mpg, aes(displ, hwy, colour = class)) + \n  geom_point()\n```\n:::\n\n\n-  Try adding some chunk options in your document\n-  Then render it again\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer5\" data-update-every=\"1\" tabindex=\"0\" style=\"right:10%;bottom:10%;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">02</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# A Bit About R\n\n## R Packages and Functions {.smaller}\n\n<br>\n\n::: {.incremental}\n-   A *function* is a set of instructions\n    -   `read_csv()` is a function\n    -   `ggplot()` is a function\n-   A *package* is a collection of functions\n    -   `readr` is a package that contains the `read_csv()` function\n    -   `ggplot2` is a package that contains the `ggplot()` function\n-   Use `install.packages()` to install packages\n-   Use `library()` to load packages\n-   You can install packages from CRAN\n:::\n\n## The Tidyverse {.smaller}\n\n::: {.incremental}\n-   The Tidyverse is a collection of data science packages\n-   It is also considered a dialect of R\n-   In this class, we will be using many Tidyverse packages\n    -   `ggplot2` for data visualization\n    -   `readr` for reading data\n    -   `dplyr` for data manipulation\n    -   `tidyr` for data tidying\n    -   Etc.\n-   At first we will load the packages independently, e.g. `library(ggplot2)`\n-   Later we will load them all at once with `library(tidyverse)`\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}